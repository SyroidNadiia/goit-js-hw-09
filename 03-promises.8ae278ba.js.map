{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEAC,KAAO,CACLC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,uBAC9BE,KAAMH,SAASC,cAAc,sBAC7BG,OAAQJ,SAASC,cAAc,wBAC/BI,IAAKL,SAASC,cAAc,0BAG9BH,KAAKC,KAAKO,iBAAiB,UAAUC,IACnCA,EAAMC,gBAAgB,IAExBV,KAAKI,MAAMI,iBAAiB,SAASC,IACnCE,EAAQC,OAAOH,EAAMI,OAAOC,MAAM,IAEpCd,KAAKK,KAAKG,iBAAiB,SAASC,IAClCM,EAAOH,OAAOH,EAAMI,OAAOC,MAAM,IAEnCd,KAAKM,OAAOE,iBAAiB,SAASC,IACpCO,EAASP,EAAMI,OAAOC,KAAK,IAE7Bd,KAAKO,IAAIC,iBAAiB,SAQ1B,SAASS,IACP,GAAIC,GAAYF,EACd,OAEFE,GAAY,GAcd,SAAuBC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,CAAEG,SAAAT,EAAUf,MAAAgB,IAEpBM,EAAO,CAAEE,SAAAT,EAAUf,MAAAgB,GAAQ,GAE5BA,EAAM,G,EAtBMS,CAAcX,EAAUP,GACtCmB,MAAK,EAAGF,SAAAG,EAAU3B,MAAA4B,MACjBC,EAAAnC,GAASoC,OAAOC,QAAQ,uBAAqBJ,QAAiBC,MAAU,IAEzEI,OAAM,EAAGR,SAAAS,EAAUjC,MAAAkC,MAClBL,EAAAnC,GAASoC,OAAOK,QAAQ,sBAAoBF,QAAeC,MAAU,IAGzE3B,GAASI,EACTE,G,IApBF,IAAIN,EAAQ,EACRI,EAAO,EACPC,EAAS,EACTE,EAAW","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nrefs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n  btn: document.querySelector('button[type=\"submit\"]'),\n};\n\nrefs.form.addEventListener('submit', event => {\n  event.preventDefault();\n});\nrefs.delay.addEventListener('input', event => {\n  delay = Number(event.target.value);\n});\nrefs.step.addEventListener('input', event => {\n  step = Number(event.target.value);\n});\nrefs.amount.addEventListener('input', event => {\n  amount = event.target.value;\n});\nrefs.btn.addEventListener('click', onClickBtn);\n\nconst formData = {};\nlet delay = 0;\nlet step = 0;\nlet amount = 0;\nlet position = 0;\n\nfunction onClickBtn() {\n  if (position >= amount) {\n    return;\n  }\n  position += 1;\n\n  const promises = createPromise(position, delay)\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n\n  delay += step;\n  onClickBtn();\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","refs","form","document","querySelector","delay","step","amount","btn","addEventListener","event","preventDefault","$47d4ff9957288465$var$delay","Number","target","value","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$onClickBtn","$47d4ff9957288465$var$position","position3","delay3","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","$47d4ff9957288465$var$createPromise","then","position1","delay1","$parcel$interopDefault","Notify","success","catch","position2","delay2","failure"],"version":3,"file":"03-promises.8ae278ba.js.map"}