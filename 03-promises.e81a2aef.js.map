{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,UAEa,CACXC,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAa3B,SAAuBC,GACrBA,EAAMC,iBACN,MAAQC,MAAAC,EAAOC,KAAAC,EAAMC,OAAAC,GATvB,SAAyBP,GAIvB,OAHAQ,EAAQC,OAAOT,EAAMU,OAAOC,SAAST,MAAMU,OAC3CC,EAAOJ,OAAOT,EAAMU,OAAOC,SAASP,KAAKQ,OACzCE,EAASL,OAAOT,EAAMU,OAAOC,SAASL,OAAOM,OACtC,C,MAAEJ,E,KAAOK,E,OAAMC,E,CAKUC,CAAgBf,GAEhD,IAAK,IAAIgB,EAAW,EAAGA,EAAWT,EAAQS,GAAY,EACpDC,EAAcD,EAAW,EAAGb,EAAQE,EAAOW,GACxCE,MAAK,EAACC,SAAEA,EAAUjB,MAAAkB,MACjBC,EAAA3B,GAAS4B,OAAOC,QACd,uBAAqBJ,QAAiBC,MAAU,IAGnDI,OAAM,EAACL,SAAEA,EAAUjB,MAAAuB,MAClBJ,EAAA3B,GAAS4B,OAAOI,QACd,sBAAoBP,QAAeM,MAAU,G,IAxBvD,IAAIjB,EAAQ,EACRK,EAAO,EACPC,EAAS,EA4Bb,SAASG,EAAcE,EAAUQ,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEb,EAAUjB,MAAAyB,IAEpBM,EAAO,C,SAAEd,EAAUjB,MAAAyB,GAAQ,GAE5BA,EAAM,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', onStartCreate);\n\nlet delay = 0;\nlet step = 0;\nlet amount = 0;\n\nfunction onGetInputsData(event) {\n  delay = Number(event.target.elements.delay.value);\n  step = Number(event.target.elements.step.value);\n  amount = Number(event.target.elements.amount.value);\n  return { delay, step, amount };\n}\n\nfunction onStartCreate(event) {\n  event.preventDefault();\n  const { delay, step, amount } = onGetInputsData(event);\n\n  for (let position = 0; position < amount; position += 1) {\n    createPromise(position + 1, delay + step * position)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","form","document","querySelector","addEventListener","event","preventDefault","delay","delay1","step","step1","amount","amount1","$47d4ff9957288465$var$delay","Number","target","elements","value","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$onGetInputsData","position1","$47d4ff9957288465$var$createPromise","then","position","delay2","$parcel$interopDefault","Notify","success","catch","delay3","failure","delay4","shouldResolve","Math","random","Promise","resolve","reject","setTimeout"],"version":3,"file":"03-promises.e81a2aef.js.map"}